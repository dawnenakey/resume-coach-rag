name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10"]

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -r requirements.txt
    
    - name: Check formatting with black
      run: |
        black --check .
    
    - name: Check imports with isort
      run: |
        isort --check-only --diff .
    
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Run tests
      run: |
        pytest

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Build Docker image
      run: docker build . --file Dockerfile --tag resume-coach:$(date +%s)
    
    - name: Run Docker container
      run: |
        CONTAINER_ID=$(docker run -d -p 8501:8501 resume-coach:$(date +%s))
        echo "CONTAINER_ID=$CONTAINER_ID" >> $GITHUB_ENV
        
        # Wait for container to be healthy (max 30 seconds)
        for i in {1..30}; do
          if [ "$(docker inspect --format='{{.State.Health.Status}}' $CONTAINER_ID)" == "healthy" ]; then
            echo "Container is healthy"
            break
          fi
          if [ $i -eq 30 ]; then
            echo "Container failed to become healthy"
            docker logs $CONTAINER_ID
            exit 1
          fi
          sleep 1
        done
        
        # Test Streamlit endpoint
        curl --fail --retry 3 --retry-delay 1 http://localhost:8501/_stcore/health
    
    - name: Cleanup
      if: always()
      run: |
        if [ ! -z "$CONTAINER_ID" ]; then
          docker logs $CONTAINER_ID
          docker stop $CONTAINER_ID
          docker rm $CONTAINER_ID
        fi 